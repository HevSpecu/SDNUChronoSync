---
import DashboardLayout from '../../../layouts/DashboardLayout.astro';

export const prerender = false;

const title = `团队课表视图`;
const description = '查看团队成员的聚合课表';
---

<DashboardLayout title={title} description={description}>
          <!-- Loading State -->
          <div id="loading-state" class="text-center py-12">
            <svg class="animate-spin h-8 w-8 text-indigo-600 mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            <p class="mt-2 text-sm text-gray-500">加载团队信息中...</p>
          </div>

          <!-- Error State -->
          <div id="error-state" class="hidden text-center py-12">
            <svg class="mx-auto h-12 w-12 text-red-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">加载失败</h3>
            <p class="mt-1 text-sm text-gray-500" id="error-message"></p>
            <div class="mt-6">
              <button
                id="back-to-teams"
                class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >
                返回我的团队
              </button>
            </div>
          </div>

          <!-- Main Content -->
          <div id="main-content" class="hidden">
            <!-- Page Header -->
            <div class="mb-8">
              <div class="flex items-center justify-between">
                <div>
                  <nav class="flex" aria-label="Breadcrumb">
                    <ol class="flex items-center space-x-4">
                      <li>
                        <div>
                          <a href="/dashboard/my-teams" class="text-gray-400 hover:text-gray-500">
                            我的团队
                          </a>
                        </div>
                      </li>
                      <li>
                        <div class="flex items-center">
                          <svg class="flex-shrink-0 h-5 w-5 text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M5.555 17.776l8-16 .894.448-8 16-.894-.448z" />
                          </svg>
                          <span class="ml-4 text-sm font-medium text-gray-500" id="team-name-breadcrumb">团队课表</span>
                        </div>
                      </li>
                    </ol>
                  </nav>
                  <h1 class="mt-2 text-3xl font-bold text-gray-900" id="team-name-title">团队课表</h1>
                  <p class="mt-2 text-sm text-gray-600" id="team-description">查看团队成员的所有课表</p>
                </div>
                <div class="flex items-center space-x-3">
                  <button
                    id="refresh-btn"
                    class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                  >
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    刷新
                  </button>
                </div>
              </div>
            </div>

            <!-- Team Info Card -->
            <div class="mb-8 bg-white overflow-hidden shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <div class="flex items-center justify-between">
                  <div>
                    <h3 class="text-lg leading-6 font-medium text-gray-900" id="team-info-name">团队信息</h3>
                    <div class="mt-2 max-w-xl text-sm text-gray-500">
                      <p>团队代码: <span class="font-mono font-semibold" id="team-code"></span></p>
                      <p class="mt-1">成员数量: <span id="member-count"></span> 人</p>
                    </div>
                  </div>
                  <div class="flex-shrink-0">
                    <button
                      id="copy-team-code"
                      class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                      title="复制团队代码"
                    >
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
                      </svg>
                    </button>
                  </div>
                </div>

                <!-- Team Members -->
                <div class="mt-6">
                  <h4 class="text-sm font-medium text-gray-900 mb-3">团队成员</h4>
                  <div class="flex flex-wrap gap-2" id="team-members"></div>
                </div>
              </div>
            </div>

            <!-- Calendar Container -->
            <div id="calendar-container" class="bg-white shadow rounded-lg">
              <div class="px-4 py-5 sm:p-6">
                <div id="schedule-calendar"></div>
              </div>
            </div>
          </div>
  <!-- Copy Success Toast -->
  <div
    id="copy-success-toast"
    class="hidden fixed bottom-4 right-4 bg-green-500 text-white px-4 py-2 rounded-md shadow-lg z-50"
  >
    团队代码已复制到剪贴板
  </div>

  <script>
    import { createApp, h } from 'vue';
    import { createPinia } from 'pinia';
    import ScheduleCalendar from '@/components/ScheduleCalendar.vue';
    import { useAuthStore } from '@/stores/auth';
    import { useTeamStore } from '@/stores/team';
    import { generateEventColor } from '@/utils/colors';

    // Get team ID from URL
    const pathParts = window.location.pathname.split('/');
    const teamId = parseInt(pathParts[pathParts.length - 1]);

    if (isNaN(teamId)) {
      window.location.href = '/dashboard/my-teams';
    }

    // Create Vue app
    const pinia = createPinia();
    const app = createApp({});
    app.use(pinia);

    // Initialize stores
    const authStore = useAuthStore();
    const teamStore = useTeamStore();

    // DOM elements
    const loadingState = document.getElementById('loading-state');
    const errorState = document.getElementById('error-state');
    const mainContent = document.getElementById('main-content');
    const errorMessage = document.getElementById('error-message');
    const backToTeamsBtn = document.getElementById('back-to-teams');
    const refreshBtn = document.getElementById('refresh-btn');
    const copyTeamCodeBtn = document.getElementById('copy-team-code');
    const copyToast = document.getElementById('copy-success-toast');

    // State
    let currentTeam = null;
    let teamEvents = [];

    // Load data
    async function loadData() {
      try {
        // Show loading state
        if (loadingState) loadingState.style.display = 'block';
        if (errorState) errorState.style.display = 'none';
        if (mainContent) mainContent.style.display = 'none';

        // Load team data
        currentTeam = await teamStore.fetchTeam(teamId);
        teamEvents = await teamStore.fetchTeamSchedules(teamId);

        // Update UI
        updateTeamInfo(currentTeam);
        renderCalendar();

        // Show main content
        if (loadingState) loadingState.style.display = 'none';
        if (mainContent) mainContent.style.display = 'block';

      } catch (error) {
        console.error('Failed to load team data:', error);
        
        // Show error state
        if (loadingState) loadingState.style.display = 'none';
        if (errorState) errorState.style.display = 'block';
        
        if (error.response?.status === 403) {
          if (errorMessage) errorMessage.textContent = '您没有权限查看此团队的课表';
        } else if (error.response?.status === 404) {
          if (errorMessage) errorMessage.textContent = '团队不存在或已被删除';
        } else {
          if (errorMessage) errorMessage.textContent = error.message || '加载团队数据失败';
        }
      }
    }

    function updateTeamInfo(team) {
      const elements = {
        'team-name-breadcrumb': team.name,
        'team-name-title': team.name,
        'team-description': `查看"${team.name}"团队成员的所有课表`,
        'team-info-name': team.name,
        'team-code': team.team_code,
        'member-count': team.members?.length || 0
      };

      Object.entries(elements).forEach(([id, value]) => {
        const element = document.getElementById(id);
        if (element) element.textContent = value;
      });

      // Render team members
      const membersContainer = document.getElementById('team-members');
      if (membersContainer) {
        membersContainer.innerHTML = '';
        
        if (team.members && team.members.length > 0) {
          team.members.forEach(member => {
            const memberEl = document.createElement('span');
            memberEl.className = 'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800';
            
            if (member.id === team.creator_id) {
              memberEl.innerHTML = `
                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M9.383 3.076A1 1 0 0110 4v12a1 1 0 01-1.707.707L4.586 13H2a1 1 0 01-1-1V8a1 1 0 011-1h2.586l3.707-3.707a1 1 0 011.09-.217zM15.657 6.343a1 1 0 011.414 0A9.972 9.972 0 0119 12a9.972 9.972 0 01-1.929 5.657 1 1 0 11-1.414-1.414A7.971 7.971 0 0017 12c0-1.043-.2-2.04-.571-2.95l-.186-.343a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
                ${member.full_name} (创建者)
              `;
            } else {
              memberEl.textContent = member.full_name;
            }
            
            membersContainer.appendChild(memberEl);
          });
        }
      }
    }

    function renderCalendar() {
      // Process events for calendar
      const calendarEvents = teamEvents.map(event => ({
        ...event,
        color: generateEventColor(event.owner?.full_name || 'Unknown'),
        textColor: '#ffffff'
      }));

      // Create calendar app
      const calendarContainer = document.getElementById('schedule-calendar');
      if (calendarContainer) {
        const calendarApp = createApp({
          components: { ScheduleCalendar },
          setup() {
            const handleEventClick = (event) => {
              // Handle event click - could show details modal
              console.log('Event clicked:', event);
            };

            return () => {
              return h(ScheduleCalendar, {
                events: calendarEvents,
                viewMode: 'week',
                currentDate: new Date(),
                isAdminMode: true,
                onEventClick: handleEventClick
              });
            };
          }
        });

        calendarApp.use(pinia);
        calendarApp.mount('#schedule-calendar');
      }
    }

    // Event handlers
    if (refreshBtn) {
      refreshBtn.addEventListener('click', loadData);
    }
    
    if (backToTeamsBtn) {
      backToTeamsBtn.addEventListener('click', () => {
        window.location.href = '/dashboard/my-teams';
      });
    }

    if (copyTeamCodeBtn) {
      copyTeamCodeBtn.addEventListener('click', async () => {
        if (currentTeam) {
          try {
            await navigator.clipboard.writeText(currentTeam.team_code);
            if (copyToast) {
              copyToast.style.display = 'block';
              setTimeout(() => {
                copyToast.style.display = 'none';
              }, 2000);
            }
          } catch (err) {
            console.error('Failed to copy team code:', err);
          }
        }
      });
    }

    // Initialize when DOM is ready
    document.addEventListener('DOMContentLoaded', () => {
      loadData();
    });
  </script>
</DashboardLayout>
